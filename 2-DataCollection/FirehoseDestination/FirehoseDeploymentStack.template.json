{
 "Parameters": {
  "DestinationBucketName": {
   "Type": "String",
   "Description": "The name of the Amazon S3 bucket where event data will be stored. The naming conversion is <inputname>-<accountid>-<region>."
  },
  "FirehoseStreamName": {
   "Type": "String",
   "Description": "The name of the Amazon Kinesis Firehose Deliver Stream Name"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "FirehoseDestBucket5161CA67": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "DestinationBucketName"
       },
       "-",
       {
        "Ref": "AWS::AccountId"
       },
       "-",
       {
        "Ref": "AWS::Region"
       }
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DceDeploymentStack/FirehoseDestBucket/Resource"
   }
  },
  "FirehoseTransformLambdaServiceRole42EB5592": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DceDeploymentStack/FirehoseTransformLambda/ServiceRole/Resource"
   }
  },
  "FirehoseTransformLambda9FC10BFD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nfrom __future__ import print_function\nimport base64\nimport json\nimport datetime\n\n# Signature for all Lambda functions that user must implement\ndef lambda_handler(firehose_records_input, context):\n    print(\"Received records for processing from DeliveryStream: \" + firehose_records_input['deliveryStreamArn']\n          + \", Region: \" + firehose_records_input['region']\n          + \", and InvocationId: \" + firehose_records_input['invocationId'])\n\n    # Create return value.\n    firehose_records_output = {'records': []}\n\n    # Create result object.\n    # Go through records and process them\n\n    for firehose_record_input in firehose_records_input['records']:\n        # Get user payload\n        payload = base64.b64decode(firehose_record_input['data'])\n        json_value = json.loads(payload)\n\n        # Create output Firehose record and add modified payload and record ID to it.\n        firehose_record_output = {}\n        received_at = datetime.datetime.strptime(json_value['receivedAt'], '%Y-%m-%dT%H:%M:%S.%fZ')\n        partition_keys = {\n                          \"received_at_utc_date\": received_at.strftime('%Y-%m-%d')\n                        }\n\n        # Create output Firehose record and add modified payload and record ID to it.\n        firehose_record_output = {'recordId': firehose_record_input['recordId'],\n                                  'data': firehose_record_input['data'],\n                                  'result': 'Ok',\n                                  'metadata': { 'partitionKeys': partition_keys }}\n\n        # Must set proper record ID\n        # Add the record to the list of output records.\n\n        firehose_records_output['records'].append(firehose_record_output)\n\n    # At the end return processed records\n    return firehose_records_output\n        "
    },
    "Role": {
     "Fn::GetAtt": [
      "FirehoseTransformLambdaServiceRole42EB5592",
      "Arn"
     ]
    },
    "Handler": "index.lambda_handler",
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "FirehoseTransformLambdaServiceRole42EB5592"
   ],
   "Metadata": {
    "aws:cdk:path": "DceDeploymentStack/FirehoseTransformLambda/Resource"
   }
  },
  "FirehoseRoleAA67C190": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "firehose.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DceDeploymentStack/FirehoseRole/Resource"
   }
  },
  "FirehoseRoleDefaultPolicyF034DFF7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "FirehoseDestBucket5161CA67",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "FirehoseDestBucket5161CA67",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "FirehoseTransformLambda9FC10BFD",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "FirehoseTransformLambda9FC10BFD",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FirehoseRoleDefaultPolicyF034DFF7",
    "Roles": [
     {
      "Ref": "FirehoseRoleAA67C190"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DceDeploymentStack/FirehoseRole/DefaultPolicy/Resource"
   }
  },
  "FirehoseDeliveryStream": {
   "Type": "AWS::KinesisFirehose::DeliveryStream",
   "Properties": {
    "DeliveryStreamName": {
     "Ref": "FirehoseStreamName"
    },
    "DeliveryStreamType": "DirectPut",
    "ExtendedS3DestinationConfiguration": {
     "BucketARN": {
      "Fn::GetAtt": [
       "FirehoseDestBucket5161CA67",
       "Arn"
      ]
     },
     "BufferingHints": {
      "IntervalInSeconds": 60,
      "SizeInMBs": 64
     },
     "DynamicPartitioningConfiguration": {
      "Enabled": true
     },
     "ErrorOutputPrefix": "rudderstack_firehose_error/!{firehose:error-output-type}/",
     "Prefix": "rudderstack_firehose/received_at_utc_date=!{partitionKeyFromLambda:received_at_utc_date}/",
     "ProcessingConfiguration": {
      "Enabled": true,
      "Processors": [
       {
        "Parameters": [
         {
          "ParameterName": "LambdaArn",
          "ParameterValue": {
           "Fn::GetAtt": [
            "FirehoseTransformLambda9FC10BFD",
            "Arn"
           ]
          }
         }
        ],
        "Type": "Lambda"
       },
       {
        "Parameters": [],
        "Type": "AppendDelimiterToRecord"
       }
      ]
     },
     "RoleARN": {
      "Fn::GetAtt": [
       "FirehoseRoleAA67C190",
       "Arn"
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DceDeploymentStack/FirehoseDeliveryStream"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PzQ6CMBCEn8V7WUWj4SzGqwYewJSyxIX+mP5oSMO7CyUmnmYyXzK7s4dTAbsN/7hMtEMmqYFYey4GVnb6zi1X6NGymT+iO0A8BzGgX+DqJia5aloO8Rq08GT0wn5+YsQVxMpIXOKkdyNJjKk+uYkNpNGR68ji0ziEGV1Q0hvtWHuLXE2sQmeCFanlFvwrpBf+09Loltab2rQIvdu+8wLy47yud0SZDdqTQqhW/QLsy9wE+QAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DceDeploymentStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DestinationBucketNameOutput": {
   "Value": {
    "Ref": "FirehoseDestBucket5161CA67"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}